// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using crudpcapi;

#nullable disable

namespace crudpcapi.Migrations
{
    [DbContext(typeof(MysqlContext))]
    partial class MysqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("crudpcapi.Models.Photo", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("CODIGO");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long?>("Id"));

                    b.Property<byte[]>("PhotoBytes")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("PHOTO_BYTES");

                    b.Property<long>("SujeitoId")
                        .HasColumnType("bigint")
                        .HasColumnName("CODIGO_SUJEITO");

                    b.HasKey("Id");

                    b.HasIndex("SujeitoId");

                    b.ToTable("PHOTOS");
                });

            modelBuilder.Entity("crudpcapi.Models.Sujeito", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("CODIGO");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long?>("Id"));

                    b.Property<int>("AlturaAproximada")
                        .HasColumnType("int")
                        .HasColumnName("ALTURA_APROXIMADA");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("CIDADE");

                    b.Property<string>("Complemento")
                        .HasColumnType("longtext")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("CPF");

                    b.Property<int>("Idade")
                        .HasColumnType("int")
                        .HasColumnName("IDADE");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("NOME");

                    b.Property<string>("Referencia")
                        .HasColumnType("longtext")
                        .HasColumnName("REFERENCIA");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RUA");

                    b.Property<string>("Vulgo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("VULGO");

                    b.HasKey("Id");

                    b.ToTable("SUJEITOS");
                });

            modelBuilder.Entity("crudpcapi.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ID_USUARIO");

                    b.Property<bool?>("AlterarSenha")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ALTERAR_SENHA");

                    b.Property<string>("Role")
                        .HasColumnType("longtext")
                        .HasColumnName("ROLE");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext")
                        .HasColumnName("SENHA");

                    b.Property<int>("Usuario")
                        .HasColumnType("int")
                        .HasColumnName("USUARIO");

                    b.HasKey("Id");

                    b.ToTable("USERS");
                });

            modelBuilder.Entity("crudpcapi.Models.Photo", b =>
                {
                    b.HasOne("crudpcapi.Models.Sujeito", null)
                        .WithMany("Photos")
                        .HasForeignKey("SujeitoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("crudpcapi.Models.Sujeito", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
